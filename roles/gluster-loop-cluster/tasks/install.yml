- name: Install GlusterFS-Server
  apt:
    name: glusterfs-server
    state: present

- name: Check if file exists
  stat:
    path: "{{disk_image_path}}"
  register: image_exists

- name: Create Empty File
  command: "fallocate -l {{disk_size}} {{disk_image_path}}" 
  when: not image_exists.stat.exists

- name: Create directory for disk mount
  file:
    path: "{{disk_path}}"
    state: directory

- name: Format loop device
  filesystem:
    fstype: ext4
    dev: "{{disk_image_path}}"

- name: Mount loopdevice
  ansible.posix.mount:
    path: "{{disk_path}}"
    src: "{{disk_image_path}}"
    fstype: ext4,loop
    state: present

- name: Start glusterd service
  service:
    name: glusterd
    enabled: yes
    state: started

- name: Wait for service start
  wait_for: timeout=3

- name: Create GlusterFS  volume
  gluster_volume:
        state: present 
        volume: "{{ gluster_cluster_volume }}"
        bricks: "{{ gluster_cluster_bricks }}"
        cluster: "{{ gluster_cluster_hosts }}"
        transport: "{{ gluster_cluster_transport | default('tcp') }}"
        replicas: "{{ gluster_cluster_replica_count | default(0) }}"
        arbiters: "{{ gluster_cluster_arbiter_count | default(0)}}"
        disperses: "{{ gluster_cluster_disperse_count | default(0) }}"
        redundancies: "{{ gluster_cluster_redundancy_count | default(0) }}"
        force: "{{ gluster_cluster_force | default('no') }}"
        options: "{{ gluster_cluster_options | default({}) }}"
  run_once: true

- name: Create GluserFS mount directory
  file:
    path: "{{gluster_disk_mount_path}}"
    state: directory

- name: Mount GlusterFS Disk as directory
  mount:
    path: "{{gluster_disk_mount_path}}"
    src: "{{inventory_hostname}}:/{{gluster_cluster_volume}}"
    fstype: glusterfs
    opts: auto
    state: present

- name: reload systemctl
  command: systemctl daemon-reload
- name: update mounts
  command: mount -a
